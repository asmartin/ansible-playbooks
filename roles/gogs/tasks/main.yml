---
 - name: install prerequisites
   apt: name="{{ item }}" update_cache=yes
   with_items:
    - ca-certificates # required for trusting apt key over HTTPS
    - apt-transport-https # required for installing packages over HTTPS

 - name: add packager.io apt key
   apt_key: url=https://deb.packager.io/key

 - name: add gogs repository
   apt_repository: repo="deb https://deb.packager.io/gh/pkgr/gogs {{ ansible_distribution_release }} pkgr"

 - name: install required packages
   apt: name={{ item }} update_cache=yes
   when: ansible_os_family == "Debian"
   with_items:
    - gogs
    - nginx
    - mariadb-server
    - python-mysqldb

 - name: create gogs db user
   mysql_user: name="{{ gogs_db_user }}" password="{{ gogs_db_pass }}" priv="*.*:ALL" state=present

 - name: create gogs database
   mysql_db: name=all state=import target=/opt/gogs/scripts/mysql.sql
   when: reload_database == "y"

 - name: update nginx config
   template: src=nginx.j2 dest=/etc/nginx/sites-enabled/default
   notify: reload nginx

 - name: create gogs directories
   file: path="{{ item }}" state=directory owner=gogs group=gogs
   with_items:
    - "{{ gogs_storage }}/avatars"
    - "{{ gogs_storage }}/attachments"
    - "{{ gogs_storage }}/repos"
    - "{{ gogs_backup }}"

 - name: update gogs config
   template: src=app.ini.j2 dest=/etc/gogs/conf/app.ini
   notify: restart gogs

 - name: copy backup script
   template: src=gogsBackup.sh dest=/usr/local/bin/gogsBackup.sh mode="0755"

 - name: schedule backups
   cron: name="backup gogs" job="/usr/local/bin/gogsBackup.sh" special_time=weekly
